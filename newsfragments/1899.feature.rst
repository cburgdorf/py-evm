Make handling of different consensus mechanisms more flexible and sound.

1. ``validate_seal`` and ``validate_header`` are now instance methods. The only reason they can
be classmethods today is because our Pow implementation relies on a globally shared cache
which should be refactored to use the ``ConsensusContextAPI``.

2. There a two new methods: ``chain.validate_chain_extension(header, parents)`` and
``vm.validate_seal_extension``. They perform extension seal checks to support consensus schemes
where headers can not be checked if parents are missing.

3. The consensus mechanism is now abstracted via ``ConsensusAPI`` and ``ConsensusContextAPI``.
VMs instantiate a consensus api based on the set ``consensus_class`` and pass it a context which
they receive from the chain upon instantiation. The chain instantiates the consensus context api
based on the ``consensus_context_class``.
